import itertools

def Text(text,i,k):
  return text[i:(i+k)]

def HammingDistance(p,q):
  if len(p)!=len(q):
    return -1
  count=0
  for i in range(0,len(p)):
    if p[i]!=q[i]:
      count=count+1
  
  return count
  
def GenerateArray(k):
  base=["A","C","G","T"]
  array=list()
  comb=[p for p in itertools.product(base,repeat=k)]
  for element in comb:
    pattern=""
    for i in range(0,len(element)):
      pattern=pattern+element[i]
    array.append(pattern)
  return array
  
 def MismatchesFrequentWords(text,k,d):
  countD=dict()
  for i in range(0,4**k):
    pattern=(GenerateArray(k))[i]
    count=0
    for j in range(0,len(text)-k+1):
      pat=Text(text,j,k)
      if HammingDistance(pattern,pat)<=d:
        count=count+1
    countD[pattern]=count
  words=list()
  max=0
  s=0
  for v in countD.values():
    if v>max:
      max=v
  [words.append(k) for k,v in countD.items() if (v==max and k not in words)]
  
  return words

rez=MismatchesFrequentWords(input(),int(input()),int(input()))
for element in rez:
  print(element,end=" ")
