def Prefix(pattern):
  return pattern[:-1]
  
def Sufix(pattern):
  return pattern[1:]
  
def DeBruijn(patterns):
  d=dict()
  sortPatterns=sorted(patterns)

  for i in range(0,len(sortPatterns)):
    pattern=Prefix(sortPatterns[i])
    rez=Sufix(sortPatterns[i])
    if pattern not in d:
      d[pattern]=rez
    else:
      d[pattern]=d[pattern]+","+rez

  return d

d=DeBruijn(input().split(" "))
for k,v in d.items():
  print(k+ " -> " +v)
