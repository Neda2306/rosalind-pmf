def Text(text,i,k):
  return text[i:(i+k)]

def HammingDistance(p,q):
  if len(p)!=len(q):
    return -1
  
  d=0
  for i in range(0,len(p)):
    if p[i]!=q[i]:
      d+=1
  return d

def AproximatePatternMatching(pattern,text,d):
  k=len(pattern)
  indecies=[]

  for i in range(0,len(text)-k+1):
    kmer=Text(text,i,k)
    if HammingDistance(pattern,kmer)<=d:
      indecies.append(i)
  
  return indecies
    


res=AproximatePatternMatching(input(),input(),int(input()))

for ind in res:
  print(ind)

