import itertools

def GenerateArray(k):
  base=["A","C","G","T"]
  array=list()
  comb=[p for p in itertools.product(base,repeat=k)]

  for element in comb:
    pattern=""
    for i in range(0,len(element)):
      pattern=pattern+element[i]
    array.append(pattern)
  
  return array

def HammingDistance(p,q):
  if len(p)!=len(q):
    return -1
  
  dist=0
  for i in range(len(p)):
    if p[i]!=q[i]:
      dist+=1
  
  return dist

def Neighbours(pattern,d):
  array=GenerateArray(len(pattern))
  kmers=[]

  for element in array:
    if HammingDistance(pattern,element)<=d:
      kmers.append(element)
  
  return kmers

res=Neighbours(input(),int(input()))
for element in res:
  print(element)
